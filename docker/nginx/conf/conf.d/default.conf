map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

server {
    listen 80 deferred reuseport default;
    listen [::]:80 deferred reuseport default;

    server_name 127.0.0.1 localhost;
    charset utf-8;
    root /var/www/public;
    index index.html index.php;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # auth_basic "Restricted";
    # auth_basic_user_file /var/www/.htpasswd;

    if (!-e $request_filename) {
       rewrite  ^(.*)$  /bitrix/urlrewrite.php last;
    }

    sendfile off;
    client_max_body_size 100m;
    client_body_buffer_size 4M;

    proxy_cache off;
    expires epoch;

    # redirect index.php to page without it
    if ($request_uri ~* "^(.*/)index\.php$") {
        return 301 $1;
    }

    # Disable MIME sniffing
    # add_header X-Content-Type-Options 'nosniff' always;

    # remove multiple slashes
    # duplicated slashes sometimes will work and won't be rewritten, fixing it in this configuration is tricky
    # rewrite ^([^.]*?\/)\/+(.*)$ $1$2 permanent;

    ##
    # Locations
    ##

    gzip            on;
    gzip_types      text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    location / {
        expires $expires;

        proxy_redirect                      off;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout          1m;
        proxy_connect_timeout       1m;
        proxy_pass                          http://node:3000;
    }

    location /api {
        index index.php index.html;
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    location ~ .php$ {
        include fastcgi_params;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        fastcgi_send_timeout 21600;
        fastcgi_read_timeout 21600;
        # make SERVER_NAME behave same as HTTP_HOST
        # fastcgi_param SERVER_NAME $host;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # Disable access to hidden files/folders
    # if ($uri ~* /\.(?!well-known)) { return 404; }
    location ~ (/\.ht|/\.git|/\.gitignore) { deny all; }
    location = /favicon.png { log_not_found off; access_log off; }
    location = /robots.txt { log_not_found off; access_log off; }

    # location ~* ^.+\.(jpg|jpeg|gif|png|svg|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar|eot|otf|ttf|woff|woff2)$     #     log_not_found off;
    #     access_log off;
    #     expires 30d;
    #     add_header Cache-Control public;
    #     # re-add security header
    #     add_header X-Content-Type-Options nosniff;
    # }

    # error_page 404 /404.html;
    # location /404.html {}
}
