version: '3'

services:
    php:
        build:
            context: ./docker/${PHP_VERSION}
        container_name: ${PROJECT}_php
        volumes_from:
            - source
        environment:
            PHP_IDE_CONFIG: "serverName=Docker"
        ports:
            - '127.0.0.1:9000:9000'
        links:
            - db
        restart: always

    web_server:
        build:
            context: ./docker/${WEB_SERVER_TYPE}
        container_name: ${PROJECT}_webserver
        depends_on:
            - source
        volumes_from:
            - source
        ports:
            - '${INTERFACE}:80:80'
            - '${INTERFACE}:443:443'
        links:
            - php
        restart: always

    db:
        build:
            context: ./docker/${DB_SERVER_TYPE}
        platform: linux/amd64
        container_name: ${PROJECT}_db
        volumes_from:
            - source
        ports:
            - '${INTERFACE}:3306:3306'
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        command: mysqld --sql-mode=""
        restart: always

    adminer:
        image: dockette/adminer:full
        container_name: ${PROJECT}adminer
        links:
            - db:db
        ports:
            - '${INTERFACE}:8080:80'
        environment:
            UPLOAD: 1024M # upload_max_filesize, post_max_size

    source:
        image: alpine:latest
        container_name: ${PROJECT}_source
        volumes:
            - ./logs/${WEB_SERVER_TYPE}:/var/log/${WEB_SERVER_TYPE}
            # - ./logs/php:/var/log/php
            # - ./logs/db:/var/log/mysql
            - ./data/db:/var/lib/mysql
            - ./www/public:/var/www
